<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="SexySpellEntry">
<refmeta>
<refentrytitle role="top_of_page">SexySpellEntry</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBSEXY Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>SexySpellEntry</refname>
<refpurpose>A GtkEntry with inline spell checking.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="SexySpellEntry-struct">SexySpellEntry</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="sexy-spell-entry-new">sexy_spell_entry_new</link>            (void);
<link linkend="GSList">GSList</link>*     <link linkend="sexy-spell-entry-get-languages">sexy_spell_entry_get_languages</link>  (const <link linkend="SexySpellEntry">SexySpellEntry</link> *entry);
<link linkend="gchar">gchar</link>*      <link linkend="sexy-spell-entry-get-language-name">sexy_spell_entry_get_language_name</link>
                                            (const <link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang);
<link linkend="gboolean">gboolean</link>    <link linkend="sexy-spell-entry-language-is-active">sexy_spell_entry_language_is_active</link>
                                            (const <link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang);
<link linkend="gboolean">gboolean</link>    <link linkend="sexy-spell-entry-activate-language">sexy_spell_entry_activate_language</link>
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang,
                                             <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>        <link linkend="sexy-spell-entry-deactivate-language">sexy_spell_entry_deactivate_language</link>
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang);
<link linkend="gboolean">gboolean</link>    <link linkend="sexy-spell-entry-set-active-languages">sexy_spell_entry_set_active_languages</link>
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             <link linkend="GSList">GSList</link> *langs,
                                             <link linkend="GError">GError</link> **error);
<link linkend="GSList">GSList</link>*     <link linkend="sexy-spell-entry-get-active-languages">sexy_spell_entry_get_active_languages</link>
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry);
<link linkend="gboolean">gboolean</link>    <link linkend="sexy-spell-entry-is-checked">sexy_spell_entry_is_checked</link>     (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry);
<link linkend="void">void</link>        <link linkend="sexy-spell-entry-set-checked">sexy_spell_entry_set_checked</link>    (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> checked);
<link linkend="void">void</link>        <link linkend="sexy-spell-entry-activate-default-languages">sexy_spell_entry_activate_default_languages</link>
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----<link linkend="GtkObject">GtkObject</link>
               +----<link linkend="GtkWidget">GtkWidget</link>
                     +----<link linkend="GtkEntry">GtkEntry</link>
                           +----SexySpellEntry
</synopsis>

</refsect1>



<refsect1 role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
SexySpellEntry implements
 <link linkend="GtkEditable">GtkEditable</link>,  <link linkend="AtkImplementorIface">AtkImplementorIface</link> and  <link linkend="GtkCellEditable">GtkCellEditable</link>.</para>

</refsect1>



<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

&quot;<link linkend="SexySpellEntry-word-check">word-check</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                            <link linkend="gchar">gchar</link>          *word,
                                            <link linkend="gpointer">gpointer</link>        user_data)      : Run last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
SexySpellEntry is a GtkEntry with inline spell checking.  This makes use of
Enchant and allows the user to see what they've typed wrong as they type it.
A right-click menu is provided for misspelled words offering suggestions.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="SexySpellEntry-struct" role="struct"/>SexySpellEntry</title>
<indexterm><primary>SexySpellEntry</primary></indexterm><programlisting>typedef struct _SexySpellEntry SexySpellEntry;</programlisting>
<para>
The <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link> struct contains private data only, and should be manipulated using the functions below.
</para></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-new" role="function"/>sexy_spell_entry_new ()</title>
<indexterm><primary>sexy_spell_entry_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  sexy_spell_entry_new            (void);</programlisting>
<para>
Creates a new SexySpellEntry widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-get-languages" role="function"/>sexy_spell_entry_get_languages ()</title>
<indexterm><primary>sexy_spell_entry_get_languages</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*     sexy_spell_entry_get_languages  (const <link linkend="SexySpellEntry">SexySpellEntry</link> *entry);</programlisting>
<para>
Retrieve a list of language codes for which dictionaries are available.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GList"><type>GList</type></link> object, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-get-language-name" role="function"/>sexy_spell_entry_get_language_name ()</title>
<indexterm><primary>sexy_spell_entry_get_language_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      sexy_spell_entry_get_language_name
                                            (const <link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang);</programlisting>
<para>
Get a friendly name for a given locale.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lang</parameter>&nbsp;:</term>
<listitem><simpara> The language code to lookup a friendly name for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The name of the locale. Should be freed with <link linkend="g-free"><function>g_free()</function></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-language-is-active" role="function"/>sexy_spell_entry_language_is_active ()</title>
<indexterm><primary>sexy_spell_entry_language_is_active</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    sexy_spell_entry_language_is_active
                                            (const <link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang);</programlisting>
<para>
Determine if a given language is currently active.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lang</parameter>&nbsp;:</term>
<listitem><simpara> The language to use, in a form enchant understands.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if the language is active.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-activate-language" role="function"/>sexy_spell_entry_activate_language ()</title>
<indexterm><primary>sexy_spell_entry_activate_language</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    sexy_spell_entry_activate_language
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Activate spell checking for the language specifed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lang</parameter>&nbsp;:</term>
<listitem><simpara> The language to use in a form Enchant understands. Typically either
       a two letter language code or a locale code in the form xx_XX.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Return location for error.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> FALSE if there was an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-deactivate-language" role="function"/>sexy_spell_entry_deactivate_language ()</title>
<indexterm><primary>sexy_spell_entry_deactivate_language</primary></indexterm><programlisting><link linkend="void">void</link>        sexy_spell_entry_deactivate_language
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             const <link linkend="gchar">gchar</link> *lang);</programlisting>
<para>
Deactivate spell checking for the language specifed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lang</parameter>&nbsp;:</term>
<listitem><simpara> The language in a form Enchant understands. Typically either
       a two letter language code or a locale code in the form xx_XX.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-set-active-languages" role="function"/>sexy_spell_entry_set_active_languages ()</title>
<indexterm><primary>sexy_spell_entry_set_active_languages</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    sexy_spell_entry_set_active_languages
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             <link linkend="GSList">GSList</link> *langs,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
Activate spell checking for only the languages specified.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>langs</parameter>&nbsp;:</term>
<listitem><simpara> A list of language codes to activate, in a form Enchant understands.
        Typically either a two letter language code or a locale code in the
        form xx_XX.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> Return location for error.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> FALSE if there was an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-get-active-languages" role="function"/>sexy_spell_entry_get_active_languages ()</title>
<indexterm><primary>sexy_spell_entry_get_active_languages</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*     sexy_spell_entry_get_active_languages
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry);</programlisting>
<para>
Retrieve a list of the currently active languages.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A GSList of char* values with language codes (en, fr, etc).  Both
         the data and the list must be freed by the user.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-is-checked" role="function"/>sexy_spell_entry_is_checked ()</title>
<indexterm><primary>sexy_spell_entry_is_checked</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    sexy_spell_entry_is_checked     (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry);</programlisting>
<para>
Queries a <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link> and returns whether the entry has spell-checking enabled.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if the entry has spell-checking enabled.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-set-checked" role="function"/>sexy_spell_entry_set_checked ()</title>
<indexterm><primary>sexy_spell_entry_set_checked</primary></indexterm><programlisting><link linkend="void">void</link>        sexy_spell_entry_set_checked    (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                             <link linkend="gboolean">gboolean</link> checked);</programlisting>
<para>
Sets whether the entry has spell-checking enabled.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>checked</parameter>&nbsp;:</term>
<listitem><simpara> Whether to enable spell-checking
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="sexy-spell-entry-activate-default-languages" role="function"/>sexy_spell_entry_activate_default_languages ()</title>
<indexterm><primary>sexy_spell_entry_activate_default_languages</primary></indexterm><programlisting><link linkend="void">void</link>        sexy_spell_entry_activate_default_languages
                                            (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry);</programlisting>
<para>
Activate spell checking for languages specified in the $LANG
or $LANGUAGE environment variables.  These languages are
activated by default, so this function need only be called
if they were previously deactivated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="SexySpellEntry"><type>SexySpellEntry</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="SexySpellEntry-word-check"/>The &quot;word-check&quot; signal</title>
<indexterm><primary>SexySpellEntry::word-check</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="SexySpellEntry">SexySpellEntry</link> *entry,
                                            <link linkend="gchar">gchar</link>          *word,
                                            <link linkend="gpointer">gpointer</link>        user_data)      : Run last</programlisting>
<para>
The ::word-check signal is emitted whenever the entry has to check
a word.  This allows the application to mark words as correct even
if none of the active dictionaries contain it, such as nicknames in
a chat client.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>entry</parameter>&nbsp;:</term>
<listitem><simpara> The entry on which the signal is emitted.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>word</parameter>&nbsp;:</term>
<listitem><simpara> The word to check.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to indicate that the word should be marked as
correct.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
