<MACRO>
<NAME>SKIN_TYPE_WINDOW</NAME>
#define SKIN_TYPE_WINDOW              (skin_window_get_type())
</MACRO>
<MACRO>
<NAME>SKIN_WINDOW</NAME>
#define SKIN_WINDOW(obj)              (G_TYPE_CHECK_INSTANCE_CAST((obj), SKIN_TYPE_WINDOW, SkinWindow)) 
</MACRO>
<MACRO>
<NAME>SKIN_WINDOW_CLASS</NAME>
#define SKIN_WINDOW_CLASS(klass)      (G_TYPE_CHECK_CLASS_CAST((klass), SKIN_TYPE_WINDOW, SkinWindowClass)) 
</MACRO>
<MACRO>
<NAME>SKIN_IS_WINDOW</NAME>
#define SKIN_IS_WINDOW(obj)           (G_TYPE_CHECK_INSTANCE_TYPE((obj), SKIN_TYPE_WINDOW))
</MACRO>
<MACRO>
<NAME>SKIN_IS_WINDOW_CLASS</NAME>
#define SKIN_IS_WINDOW_CLASS(klass)   (G_TYPE_CHECK_CLASS_TYPE((klass), SKIN_TYPE_WINDOW))
</MACRO>
<MACRO>
<NAME>SKIN_WINDOW_GET_CLASS</NAME>
#define SKIN_WINDOW_GET_CLASS(obj)    (G_TYPE_INSTANCE_GET_CLASS((obj), SKIN_TYPE_WINODW, SkinWindowClass))
</MACRO>
<STRUCT>
<NAME>SkinWindow</NAME>
</STRUCT>
<STRUCT>
<NAME>SkinWindowClass</NAME>
</STRUCT>
<STRUCT>
<NAME>SkinWindow</NAME>
struct _SkinWindow
{
	GtkWidget parent;
};
</STRUCT>
<STRUCT>
<NAME>SkinWindowClass</NAME>
struct _SkinWindowClass
{
	GtkWidgetClass parent_class;
};
</STRUCT>
<FUNCTION>
<NAME>skin_window_get_type</NAME>
<RETURNS>GType </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>skin_window_new</NAME>
<RETURNS>SkinWindow*</RETURNS>
void
</FUNCTION>
